{"version":3,"sources":["logo.png","components/Menu.js","components/Options.js","components/Question.js","components/TypeSelector.js","components/CreateSurvey.js","components/Published.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","className","to","Options","addOptions","deleteOptions","updateText","uid","type","placeholder","onChange","e","target","value","onClick","Questions","onTextUpdate","id","TypeSelector","qType","setQtype","event","parseInt","CreateSurvey","squestions","setSquestions","history","useHistory","getRandom","Math","floor","random","defaultOptionsState","useState","qText","setQtext","options","setOptions","newOptions","updatedOptions","push","length","alert","pop","updateOptionText","text","changeIndex","findIndex","x","updateSurveyQuestions","newSurveyQuestion","newQ","qtext","qtype","Question","map","opt","key","Published","questions","q","name","App","src","Logo","alt","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f4feef7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.71920b22.png\";","import React from 'react';\r\nimport {Link}  from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <Link to=\"/create\">\r\n            <button className=\"btn btn-danger m-1\">Create Survey</button>\r\n            </Link>\r\n            <Link to=\"/published\">\r\n            <button className=\"btn btn-danger m-1\">Take Survey</button>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Options = ({addOptions, deleteOptions, updateText, uid}) => {\r\n    return (\r\n        <div className=\"col-ms-8 offset-md-2 col-12 input-group my-3\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Option Text\" onChange={e => updateText(uid, e.target.value)}/>\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => addOptions()}>+</button>\r\n                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => deleteOptions()}>-</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Options;","import React from 'react';\r\n\r\nconst Questions = ({onTextUpdate}) => {\r\n    return (\r\n        <div className=\"col-md-8 offset-md-2 col-12 input-group my-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">?</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Question\" onChange={e => onTextUpdate(e.target.value)}/>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Questions;","import React from 'react';\r\n\r\nconst TypeSelector = ({ qType, setQtype }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"col-md-6 offset-md-3 col-12\">\r\n                <select className=\"custom-select\" \r\n                value={qType}\r\n                onChange={event => {let type = parseInt(event.target.value);\r\n                 setQtype(type)}}>\r\n                    <option value=\"0\">Choose Question Type</option>\r\n                    <option value=\"1\">Multi-Select</option>\r\n                    <option value=\"2\">Single-Select</option>\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeSelector;","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Options from './Options';\r\nimport Question from './Question';\r\nimport TypeSelector from './TypeSelector';\r\n\r\nconst CreateSurvey = ({squestions, setSquestions}) => {\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const getRandom = () => { return Math.floor((Math.random() * 1000) + 1)}\r\n    const defaultOptionsState = [{uid: getRandom(), value:''}, {uid: getRandom(), value:''}];\r\n    const [qText, setQtext] = useState('');\r\n    const [qType, setQtype] = useState(0);\r\n    const [options, setOptions] = useState(defaultOptionsState);\r\n\r\n    const addOptions =() => {\r\n        // alert(\"+ clicked\");\r\n        let newOptions = {\r\n            uid: getRandom(),\r\n            value:''\r\n        }\r\n        let updatedOptions = [...options];\r\n        updatedOptions.push(newOptions);\r\n        setOptions(updatedOptions);\r\n\r\n    }\r\n    const deleteOptions = () => {\r\n        if(options.length === 2){\r\n            alert('Error: A select type questions should have atleast two options');\r\n        }\r\n        else{\r\n        let updatedOptions = [...options];\r\n        updatedOptions.pop();\r\n        setOptions(updatedOptions);\r\n        }\r\n    }\r\n\r\n    const updateOptionText = (id, text) => \r\n        {\r\n            let updatedOptions = [...options];\r\n            //from the options array find the uid same as id and then update\r\n            let changeIndex = updatedOptions.findIndex(x => x.uid === id);\r\n            updatedOptions[changeIndex].value = text;\r\n            setOptions(updatedOptions);\r\n        \r\n    }\r\n\r\n    const updateSurveyQuestions = () => {\r\n        let newSurveyQuestion = [...squestions];\r\n        let newQ = {\r\n            qtext : qText,\r\n            qtype: qType,\r\n            options: options\r\n        }\r\n        newSurveyQuestion.push(newQ);\r\n        setSquestions(newSurveyQuestion);\r\n        setQtype(0);\r\n        setQtext('');\r\n        setOptions(defaultOptionsState);\r\n    }\r\n\r\n  \r\n    \r\n    const publish = () => {\r\n        updateSurveyQuestions();\r\n        history.push('/published')\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <TypeSelector qType={qType} setQtype={setQtype}/>\r\n\r\n            {qType !== 0 ?\r\n            <>\r\n             <Question onTextUpdate={setQtext}/>\r\n           \r\n             {options.map((opt, key) =>(\r\n                 <Options\r\n                  key={key}\r\n                  uid = {opt.uid}\r\n                  addOptions={addOptions}\r\n                  deleteOptions = {deleteOptions}\r\n                  updateText = {updateOptionText}\r\n                  />\r\n             ))}\r\n             <button className=\"btn btn-primary\" onClick={() => updateSurveyQuestions()}>Add Questions</button>\r\n            <button className=\"btn btn-primary\" onClick={() => publish()}>Publish</button>\r\n             \r\n             </>\r\n            : null}\r\n\r\n            \r\n           \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSurvey;","import React from 'react';\r\nimport Questions from './Question';\r\n\r\nconst Published = ({questions}) => {\r\n    return (\r\n        <>\r\n        <div className=\"mt-5 text-left\">\r\n            {questions.length > 0 ? questions.map((q, key) => (\r\n                <div key={key}>\r\n                    <h3 className=\"my-3\">{q.qtext}</h3>\r\n                    {q.options.map((opt) => (\r\n                        q.qtype === 1 ?\r\n                        <div className=\"form-check\" key={opt.uid}>\r\n                            <label className=\"form-check-label\">\r\n                                <input type=\"checkbox\" className=\"form-check-input\" value=\"\" />\r\n                                {opt.value}                                \r\n                            </label>\r\n                            </div>\r\n                            \r\n                            :\r\n                            <div className=\"form-check\" key={opt.uid}>\r\n                                <label className =\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" name=\"random\"/>\r\n                                    {opt.value}\r\n                                </label>\r\n                                </div>\r\n                                ))}\r\n\r\n                    </div>\r\n                    )) : <div className=\"text-center\"><h2>No Questions Added</h2></div>}\r\n\r\n                    {questions.length !== 0 ?  <div className=\"text-right\">\r\n                        <button className=\"btn btn-primary\">Confirm</button>\r\n                    </div> : null}\r\n        \r\n            \r\n         </div>\r\n         </>\r\n       \r\n  \r\n);\r\n}\r\n\r\nexport default Published;","import './App.css';\nimport {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Logo from'./logo.png';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport CreateSurvey from './components/CreateSurvey';\nimport Published from './components/Published'\nimport {Link}  from 'react-router-dom';\n\n\nfunction App() {\n\n  const [squestions, setSquestions] = useState([]);\n  return (\n    <>\n      <div className=\"col-md-10 offset-md-1 col-12 text-center\">\n        \n        <Router>\n        <Link to=\"/\">\n        <img className=\"col-ms-6\" src={Logo} alt='logo' />\n        </Link>\n        <Switch>\n        \n        <Route path=\"/\" component={Menu} exact/>\n          <Route path=\"/create\" exact>\n            <CreateSurvey squestions={squestions} setSquestions={setSquestions}></CreateSurvey>\n          </Route>\n          <Route path=\"/published\" >\n            <Published questions={squestions}/>\n          </Route>\n        </Switch>\n        </Router>\n\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}